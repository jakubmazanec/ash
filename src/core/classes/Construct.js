'use strict';var _ = require('_');function Construct() {}Construct.extend = function (specs/*, options*/){	var	parent = this;	var Child;	var options = _.defaults(arguments[1] || {},	{		extendable: true	});		if (specs && _.has(specs, 'constructor'))	{		Child = specs.constructor;	} else	{		Child = function()		{			return parent.apply(this, arguments);		};	}	if (specs && _.has(specs, 'static'))	{		_.assign(Child, parent, specs.static);		delete specs.static;	} else	{		_.assign(Child, parent);	}	if (!options.extendable)	{		delete Child.extend;	}	var Surrogate = function ()	{		this.constructor = Child;	};		Surrogate.prototype = parent.prototype;	Child.prototype = new Surrogate();		if (specs)	{		_.assign(Child.prototype, specs);	}		Child.__super__ = parent.prototype;		return Child;};module.exports = Construct;